(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{457:function(e,t,o){"use strict";o.r(t);var n=o(46),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"hardware"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#hardware"}},[e._v("#")]),e._v(" Hardware")]),e._v(" "),o("table",[o("thead",[o("tr",[o("th",[e._v("Model & Expansions")]),e._v(" "),o("th",[e._v("Hostname / Label & Console Cable")]),e._v(" "),o("th",[e._v("Telnet Port & Baud")])])]),e._v(" "),o("tbody",[o("tr",[o("td",[e._v("Cisco 2600 Router")]),e._v(" "),o("td",[e._v("NM-4E Ethernet module, WIC 2T")]),e._v(" "),o("td",[e._v("R1")])]),e._v(" "),o("tr",[o("td",[e._v("Cisco 2600 Router")]),e._v(" "),o("td",[e._v("NM-4E Ethernet module, WIC 2T, WIC 1T")]),e._v(" "),o("td",[e._v("R2")])]),e._v(" "),o("tr",[o("td",[e._v("Cisco 2600 Router")]),e._v(" "),o("td",[e._v("NM-4E Ethernet module, WIC 2T, WIC 1T")]),e._v(" "),o("td",[e._v("R3")])]),e._v(" "),o("tr",[o("td",[e._v("Cisco 2600 Serial Console")]),e._v(" "),o("td",[e._v("NM-32A Async Serial module")]),e._v(" "),o("td",[e._v("SC1")])]),e._v(" "),o("tr",[o("td",[e._v("Cisco Catalyst 3750 Switch")]),e._v(" "),o("td",[e._v("None")]),e._v(" "),o("td",[e._v("SW1")])]),e._v(" "),o("tr",[o("td",[e._v("Cisco Catalyst 3750 Switch")]),e._v(" "),o("td",[e._v("None")]),e._v(" "),o("td",[e._v("SW2")])]),e._v(" "),o("tr",[o("td",[e._v("Cisco Catalyst 3750 Switch")]),e._v(" "),o("td",[e._v("None")]),e._v(" "),o("td",[e._v("SW3")])]),e._v(" "),o("tr",[o("td",[e._v("Cisco Catalyst 3750 Switch")]),e._v(" "),o("td",[e._v("None")]),e._v(" "),o("td",[e._v("SW4")])]),e._v(" "),o("tr",[o("td",[e._v("Netgear FS108 Switch")]),e._v(" "),o("td",[e._v("Attached to SC1, which runs DHCP")]),e._v(" "),o("td",[e._v("(Actually "),o("a",{attrs:{href:"User:angusp",title:"wikilink"}},[e._v("User:angusp")]),e._v("'s)")])])])]),e._v(" "),o("p",[e._v("This stuff is all in the network training rack (The 12U flight case)")]),e._v(" "),o("h1",{attrs:{id:"basics"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#basics"}},[e._v("#")]),e._v(" Basics")]),e._v(" "),o("p",[e._v("All the networking equipment bar the Netgear dumb switch, which is\nunmanaged, runs Cisco IOS. It's not much like anything else and\nbasically the help command is "),o("code",[e._v("?")]),e._v(" which will help you with all your\noptions, give you more specific help with commands, and give you help\nwith arguments. Use it!")]),e._v(" "),o("p",[e._v("The serial console server (SC1) runs DHCP from it's Ethernet 0/0 port\n(Round the back of the rack). This is "),o("em",[e._v("usually")]),e._v(" plugged straight into\nthe Netgear FS108 so via that you can access SC1 over telnet like so:\n(Note that telnet is a bit odd and the escape sequence is "),o("em",[e._v("usually")]),e._v(" "),o("code",[e._v("Ctrl-]")]),e._v(")")]),e._v(" "),o("p",[o("code",[e._v("$ telnet 192.168.0.1")])]),e._v(" "),o("p",[e._v("and to access all the other devices over serial via SC1, bearing in mind\nthat the "),o("code",[e._v("CABLE_NUM")]),e._v(" is the console cable of the target device from the\nabove table.")]),e._v(" "),o("p",[o("code",[e._v("$ telnet 192.168.0.1 6032")]),o("em",[o("code",[e._v("+CABLE_NUM")])])]),e._v(" "),o("p",[e._v("The escape sequence for IOS telnet is "),o("strong",[e._v("not")]),e._v(" "),o("code",[e._v("Ctrl-]")]),e._v(" but\n"),o("code",[e._v("Ctrl-Shift-6 x")]),e._v(" because reasons. If you're using IOS telnet, this won't\nkill the session, and will actually prevent others from accessing the\nbox via telnet. To kill the session, do the following after escaping:")]),e._v(" "),o("p",[o("code",[e._v("sc>show sessions")]),e._v(" "),o("code",[e._v("Conn  Host                Address             Byte  Idle  Conn Name")]),e._v(" "),o("code",[e._v("*  1  192.168.0.1         192.168.0.1            0     0  192.168.0.1")]),e._v(" "),o("code",[e._v("sc>disconnect")]),o("em",[o("code",[e._v("SESSION_NUM")])]),e._v(" "),o("code",[e._v("Closing connection to 192.168.0.1 [confirm]")]),e._v(" "),o("code",[e._v("sc>")])]),e._v(" "),o("p",[e._v("Where "),o("code",[e._v("SESSION_NUM")]),e._v(" is the session from the list you wish to kill. Hit\nenter when prompted by "),o("code",[e._v("Closing connection to 192.168.0.1 [confirm]")])]),e._v(" "),o("h2",{attrs:{id:"using-serial"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#using-serial"}},[e._v("#")]),e._v(" Using Serial")]),e._v(" "),o("p",[e._v("It's probably worth noting that direct serial isn't usually necessary,\nas all the serial consoles can be accessed via the "),o("code",[e._v("SC1")]),e._v(" telnet\ninterface; "),o("code",[e._v("SC1")]),e._v(" itself can also be accessed via telnet. If you are\nserialing into "),o("code",[e._v("SC1")]),e._v(" and want to get at the telnet interface for the\nother boxes, IOS has a built in telnet command, although currently I\nhave no idea what the escape sequence is...")]),e._v(" "),o("p",[o("code",[e._v("ios>telnet 192.168.0.1 6033")])]),e._v(" "),o("p",[e._v("Serial on linux can be a bit difficult to set up. Basically google how\nto do it for your distro, this'll usually include adding your user to\nthe "),o("code",[e._v("dialout")]),e._v(" group and maybe some device config. As for serial\nterminals, most are a bit shit. We'd suggest using "),o("code",[e._v("minicom")]),e._v(" from the\nterminal and "),o("code",[e._v("PuTTY")]),e._v(" from a GUI on Linux, and then Mac users have nicer\nthings like "),o("code",[e._v("CoolTerm")]),e._v(". I'm not too sure about Windows but stuff like\n"),o("code",[e._v("PuTTY")]),e._v(" seems to work well there also.")]),e._v(" "),o("h1",{attrs:{id:"saving-config-changes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#saving-config-changes"}},[e._v("#")]),e._v(" Saving Config Changes")]),e._v(" "),o("p",[e._v("IOS has the neat feature of not saving your config unless you tell it to")]),e._v(" "),o("ul",[o("li",[e._v("so if you totally screw it up and lock yourself out, power cycling the\ndevice will reset it to the previous config. Once something actually\nworks and "),o("strong",[e._v("has been tested")]),e._v(" then you can save the config like so:")])]),e._v(" "),o("p",[o("code",[e._v("ios>enable")]),e._v(" "),o("code",[e._v("Password:")]),e._v(" "),o("code",[e._v("ios#copy running-config startup-config")]),e._v(" "),o("code",[e._v("Destination filename [startup-config]?")]),e._v(" "),o("code",[e._v("Building configuration...")]),e._v(" "),o("code",[e._v("[OK]")]),e._v(" "),o("code",[e._v("ios#")])]),e._v(" "),o("p",[e._v("Give the password when prompted and hit enter at any further prompts.\nThis will save the running config to the persistent memory. Also the\nreverse "),o("em",[e._v("should")]),e._v(" (I haven't tried it) restore the boot config if you\nhave't totally FUBAR'd the box.")]),e._v(" "),o("p",[o("code",[e._v("ios#copy startup-config running-config")])]),e._v(" "),o("h1",{attrs:{id:"sc1-serial-config"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#sc1-serial-config"}},[e._v("#")]),e._v(" SC1 Serial Config")]),e._v(" "),o("p",[e._v("Enable the elevated privileges mode. Enter the password when prompted.\n(The # following the hostname indicates that privileged mode is enabled)")]),e._v(" "),o("p",[o("code",[e._v("sc>enable")]),e._v(" "),o("code",[e._v("Password:")]),e._v(" "),o("code",[e._v("sc#")])]),e._v(" "),o("p",[e._v("You can check the current serial config with")]),e._v(" "),o("p",[o("code",[e._v("sc#show line")]),e._v(" "),o("code",[e._v("Tty Typ     Tx/Rx     A Modem  Roty AccO AccI   Uses   Noise  Overruns   Int")]),e._v(" "),o("code",[e._v("*    0 CTY               -    -      -    -    -      0       1     0/0       -")]),e._v(" "),o("code",[e._v("33 TTY 115200/115200 -    -      -    -    -      0       0     0/0       -")]),e._v(" "),o("code",[e._v("34 TTY 115200/115200 -    -      -    -    -      0       0     0/0       -")]),e._v(" "),o("code",[e._v("35 TTY 115200/115200 -    -      -    -    -      0       0     0/0       -")]),e._v(" "),o("code",[e._v("36 TTY   9600/9600   -    -      -    -    -      0       0     0/0       -")]),e._v(" "),o("code",[e._v("37 TTY   9600/9600   -    -      -    -    -      0       0     0/0       -")]),e._v(" "),o("code",[e._v("38 TTY   9600/9600   -    -      -    -    -      0       0     0/0       -")]),e._v(" "),o("code",[e._v("...")])]),e._v(" "),o("p",[e._v("Enter configuration mode. Hit enter when prompted by the\n"),o("code",[e._v("Configure from terminal, memory, or network [terminal]?")]),e._v(" line.")]),e._v(" "),o("p",[o("code",[e._v("sc#configure")]),e._v(" "),o("code",[e._v("Configuring from terminal, memory, or network [terminal]?")]),e._v(" "),o("code",[e._v("Enter configuration commands, one per line.  End with CNTL/Z.")]),e._v(" "),o("code",[e._v("sc(config)#")])]),e._v(" "),o("p",[e._v("Type the following to configure a line. The Async card runs TTYs on\nlines 33 - 64, with like 33 being the 1st console cable from the\nhardware table. Use "),o("code",[e._v("?")]),e._v(" to check the other config details. (33 to 35 is\nan example - this will config lines 33, 34 & 35)")]),e._v(" "),o("p",[o("code",[e._v("sc(config)#line tty 33 35")]),e._v(" "),o("code",[e._v("sc(config-line)#")]),e._v(" "),o("code",[e._v("...")])]),e._v(" "),o("p",[e._v("Some of the more useful commands are "),o("code",[e._v("rxspeed")]),e._v(" & "),o("code",[e._v("txspeed")]),e._v(" to set the\nbaud rates of the cables you selected. Once again, "),o("code",[e._v("?")]),e._v(" is your friend.")])])}),[],!1,null,null,null);t.default=s.exports}}]);