(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{499:function(e,t,o){"use strict";o.r(t);var n=o(46),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"tutorial-11-configuring-and-compiling-your-own-software-from-source"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#tutorial-11-configuring-and-compiling-your-own-software-from-source"}},[e._v("#")]),e._v(" Tutorial 11: Configuring and compiling your own software from source")]),e._v(" "),o("p",[e._v("For a typical windows user, having to compile software you download\nyourself just to use it may appear rather daunting. You are probably\nused to being able to download complete binaries ready to run, or\nsoftware that comes on nice cds that autorun when you put them in the\ndrive, come up with a cute friendly installer wizard with big buttons to\nclick that walks you through the toughest decisions you have to make -\nwhere to install it on your disk, and whether you want a desktop\nshortcut. There are no two ways to install something, and whether the\nprogram runs and how is irrelevant because it's just a bog-standard\nunoptimised generic windows binary. It is not optimised for your\ncomputer's architecture, and it will run slowly. If there is a bug in\nit, you cannot fix it, even if you knew how, because the software is\nclosed-source. You cannot decide what features you want enabled when you\ninstall it - you get it all or nothing. This is the sissy way, and we\nare not sissies. Linux lets you do things properly. In this tutorial we\nwill compile a piece of free software from source and make it run. You\nwill be amazed how easy it is - you'll be compiling your own kernels on\nyour home linux box in no time. Let's break the process down into 6\nsteps:")]),e._v(" "),o("h2",{attrs:{id:"_1-finding-and-downloading-the-software"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-finding-and-downloading-the-software"}},[e._v("#")]),e._v(" 1. Finding and downloading the software")]),e._v(" "),o("p",[e._v("For this tutorial we will get a nice console game of tetris. The idea is\nthat it is small, will be easy to configure and fast to compile, and\nwill not have (m)any dependencies to meet - and at the end of it you\nwill get something that actually does something, albeit not especially\nuseful. There is an old and trusted console tetris game included in the\n"),o("strong",[e._v("bsd-games")]),e._v(" suite, which is what we will use. A swift google session\nreveals that the source can be obtained from\n"),o("a",{attrs:{href:"http://www.ibiblio.org/pub/Linux/games/bsd-games-2.17.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.ibiblio.org/pub/Linux/games/bsd-games-2.17.tar.gz"),o("OutboundLink")],1),e._v(". I advise\nyou to select and copy the link to save having to type it out. Now what\nwe need to do is download it to our homedir - in the last tutorial i\nshowed you how to use wget, and you should have the appropriate\nenvironment variables already set to be able to download things through\nthe uni http proxy. Remember you can paste by just right-clicking in the\nputty window. Type: '''")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("cd ~\nwget http://www.ibiblio.org/pub/Linux/games/bsd-games-2.17.tar.gz\n")])])]),o("p",[e._v("''' That simple. But what to do with this mysterious .tar.gz file??")]),e._v(" "),o("h2",{attrs:{id:"_2-extracting-the-downloaded-package"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-extracting-the-downloaded-package"}},[e._v("#")]),e._v(" 2. Extracting the downloaded package")]),e._v(" "),o("p",[e._v('The extension means two things. It means it has been "'),o("strong",[e._v("tar")]),e._v('balled",\nand that it has been compressed with '),o("strong",[e._v("gzip")]),e._v('. Gzip is just like winzip\nor any other compression utility - it simply takes a file and makes it\nphysically smaller by using certain mathematical algorithms. However,\nunlike winzip et al, it only works with an individual file. So in order\nto compress multiple files together, we can combine them into one large\nfile (which we can extract the contents of later) first, called a\n"tarball". This is what GNU '),o("strong",[e._v("tar")]),e._v(" does. This program also supports\npiping its input or output through various compression programs such as\n"),o("strong",[e._v("gzip")]),e._v(", so there is no need to compress and decompress separately.\nLet's decompress our package (remember you can use tab completion): '''")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("tar -xvvzf bsd-games-2.17.tar.gz\n")])])]),o("p",[o("strong",[e._v("The commandline options are to e")]),e._v("x"),o("strong",[e._v("tract, be")]),e._v("v"),o("strong",[e._v("ery")]),e._v("v"),o("strong",[e._v("erbose,\nthat the tarball is a g")]),e._v("z"),o("strong",[e._v("ipped file, and that we should read input\nfrom the")]),e._v("f"),o("strong",[e._v("ile by the following name. If you are confused, check")]),e._v("man\ntar**(although tar is one of those programs i mentioned earlier that has\na much more detailed info page than man page). You could also have\nachieved the same effect manually by typing"),o("strong",[e._v("gunzip\nbsd-games-2.17.tar.gz")]),e._v("followed by"),o("strong",[e._v("tar -xvvf bsd-games-2.17.tar")]),e._v(". It\nis also worth mentioning that the .tar.gz extension is just one\nconvention, and you will often see files with the shorthand .tgz\nextension meaning the same thing. You will also see files with\nextensions such as .tar.bz, for which you should use the**-j"),o("strong",[e._v("flag\ninstead of")]),e._v("-z'''.")]),e._v(" "),o("p",[e._v("Ok, now we have the expanded source tree in our homedir - but what to do\nwith it?")]),e._v(" "),o("h2",{attrs:{id:"_3-configuring-the-software-before-compilation"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3-configuring-the-software-before-compilation"}},[e._v("#")]),e._v(" 3. Configuring the software before compilation")]),e._v(" "),o("p",[e._v("Type "),o("strong",[e._v("ls")]),e._v(" in your homedir. You should now see your original source\nfile, and a directory by the same name (without the extension). '''")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("cd bsd-games-2.17\nls\n")])])]),o("p",[o("strong",[e._v("You will see several directories with various source files in them,\nseveral README type files named in caps to make them stand out, and\na")]),e._v("configure"),o("strong",[e._v("script. When installing a new package you should")]),e._v("less\nREADME"),o("strong",[e._v("and")]),e._v("less INSTALL''' as well as any other helpful looking files\nyou might see - they usually explain in great detail all the ins and\nouts of installing the package in question.")]),e._v(" "),o("p",[e._v("The first thing we do is to configure the program prior to compiling it,\nso "),o("strong",[e._v("make")]),e._v(" knows what you want out of it. Before you do this you need\nto know something that varies between users - what user group you belong\nto. Type "),o("strong",[e._v("groups")]),e._v(' - this will most likely say "student" or some\nequivalent. You will need to know this to set the right file permissions\nlater. Type '),o("strong",[e._v("./configure")]),e._v(' and you will be faced with a series of\nprompts about how you want the software configured. You can generally\npress return to use the default answers for all the questions, except\nthe ones about where the software is going to be installed, and who it\nwill be owned by. We are only compiling tetris from this package, so\nwhen a prompt comes up to ask what packages to build (not what NOT to\nbuild), simply type "tetris". Since you are installing software as a\nuser rather than root, you do not have access to write to the usual\nplaces software is kept to make it available for all users. Therefore\nyou will have to install it inside your own homedir. For all prompts\nthat ask you for a location, simply give it the same one: "~/games".\nThen for the prompts that ask who what should be owned by, instead of\n"root" put your username for the user, and the group as your group (that\nyou found out ealier). When the process is complete, the configurator\nwill generate a '),o("strong",[e._v("makefile")]),e._v(" and exit. This is a file that is read by\n"),o("strong",[e._v("make")]),e._v(" that basically tells it what to do and how.")]),e._v(" "),o("h2",{attrs:{id:"_4-compiling-the-software"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_4-compiling-the-software"}},[e._v("#")]),e._v(" 4. Compiling the software")]),e._v(" "),o("p",[e._v("It is now time to compile the software - the source code is in c, and\nwill be compiled by "),o("strong",[e._v("gcc")]),e._v(", but we do not need to worry about this. We\ncould easily compile a single source .c file by typing "),o("strong",[e._v("gcc [SOURCE\nFILENAME] -o [NAME OF BINARY FILE TO MAKE]")]),e._v(", but software composed\nof many source files generally tends to be packaged to be built with\n"),o("strong",[e._v("make")]),e._v(". Now we have created a makefile, all we need to do to start the\ncompilation process is to type "),o("strong",[e._v("make")]),e._v(" - do that now! The process\nshould not take long at all, as we are only compiling tetris.")]),e._v(" "),o("h2",{attrs:{id:"_5-installing-the-compiled-binaries"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-installing-the-compiled-binaries"}},[e._v("#")]),e._v(" 5. Installing the compiled binaries")]),e._v(" "),o("p",[e._v("So we compiled the compilation, but nothing much seems to have changed.\nThe usable tetris binary has been created, but it is not in a convenient\nplace and it is surrounded by a lot of chaff in the form of no longer\nneeded source files. We can run tetris right now by typing "),o("strong",[e._v("cd tetris")]),e._v("\nand then "),o("strong",[e._v("./tetris")]),e._v(" to run it - but let's do this properly. Make sure\nyou are in the ~/bsd-games-2.17 directory and type "),o("strong",[e._v("make install")]),e._v(".\nThis will create the appropriate directories in your homedir and set the\nappropriate permissions for the files based on how we configured it. If\nyou did not set these values correctly in the configurator, this step\nwill fail because you will most likely not have the permissions\nnecessary to write anywhere other than your homedir. If this step\nsucceeds, you will have the ~/games/ directory that you created which\nwill contain the tetris binary (highlighted green if your "),o("strong",[e._v("ls")]),e._v(" has\ncolour support enabled) that you can run by typing either its full path\nor "),o("strong",[e._v("./tetris")]),e._v(' while in its directory. The ./ is necessary, and just\nmeans "in the current directory", as otherwise executables have to be in\nyour PATH variable in the environment to be executed just by typing\ntheir name. Don\'t worry about this too much for now though.')]),e._v(" "),o("p",[e._v("If for some reason the install step failed, you can move the relevant\nbinary file elsewhere manually as it is a simple program that needs\nnothing but itself to run (no runtime libraries etc). Often you will\nhave difficulty using "),o("strong",[e._v("make install")]),e._v(" on a certain package if you are\ntrying to install as user, because a lot of software wants to be\ninstalled as root to get full functionality and be accessable to all\nusers. If you are having trouble installing such a package, you can ask\nan admin to install it for you as root on the system. For the current\ntutorial, if something went wrong with the "),o("strong",[e._v("make install")]),e._v(' step you can\nsimply move the "~/bsd-games-2.17/tetris/tetris" binary to ~/ and run\nit from there. You can always go back and run '),o("strong",[e._v("./configure")]),e._v(" again and\ncorrect your mistakes, if you don't mind answering all the questions\nagain, then "),o("strong",[e._v("make install")]),e._v(" again - unless you changed any major\noptions you will not need to recompile. All the "),o("strong",[e._v("make install")]),e._v(" script\ndoes is locate the binaries and supporting files in appropriate and\nconvenient locations automatically and change their permissions\ncorrectly.")]),e._v(" "),o("h2",{attrs:{id:"_6-cleaning-up-the-remaining-unneeded-files-to-make-space"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_6-cleaning-up-the-remaining-unneeded-files-to-make-space"}},[e._v("#")]),e._v(" 6. Cleaning up the remaining unneeded files to make space")]),e._v(" "),o("p",[e._v("Now we have our tetris binary created and moved somewhere new, such as\n~/ or ~/games, we can remove the remaining source files as we no\nlonger need them. '''")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("cd ~\nrm bsd-games-2.17.tar.gz -f\nrm bsd-games-2.17 -rf\n")])])]),o("p",[o("strong",[e._v("As mentioned earlier, be exceedingly careful when\ncombining")]),e._v("-r"),o("strong",[e._v("and")]),e._v("-f''', as the latter forces a delete, leaving no\nroom for error.")]),e._v(" "),o("p",[e._v("Now you can play tetris that you compiled yourself, on your tardis shell\naccount, by going to its directory and typing "),o("strong",[e._v("./tetris")]),e._v(".\nCongratulations! You have now completed my beginner tutorials. This does\nnot mean there is nothing left to learn however! My tutorials have tried\nto keep it extremely brief, and there is a lot you have to learn for\nyourself from man pages and maybe other internet tutorials. For example,\nit is very important to know about "),o("strong",[e._v("pipes")]),e._v(', that i have barely\nmentioned - you should google for "bash pipes tutorial" to find out\nmore. Nevertheless, now you should be able to do most everyday tasks\nfrom your shell account without difficulty. If you have completed all\nthese tutorials in order, i want to thank you for taking the time to do\nso. Please contact me on irc or by email as described on the index page\nto suggest any improvements, no matter how minor - if you were lost at\nany point, please tell me so that i can clarify for future readers!')]),e._v(" "),o("p",[o("strong",[e._v("Next: "),o("a",{attrs:{href:"Tardis_Beginner_Tutorials/cheatsheet",title:"wikilink"}},[e._v("Cheatsheet")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);