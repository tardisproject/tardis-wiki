(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{462:function(e,n,t){"use strict";t.r(n);var a=t(46),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("This page describes the installation of the "),t("a",{attrs:{href:"http://blogs.sun.com/levon/entry/solaris_xen_update",target:"_blank",rel:"noopener noreferrer"}},[e._v("July 2007 update of\nOpenSolaris"),t("OutboundLink")],1),e._v(" on a\n"),t("a",{attrs:{href:"Xen",title:"wikilink"}},[e._v("Xen")]),e._v(" domU running under a Linux dom0. It has all been\nwritten based on my experiences with Debian GNU/Linux 4.0 as the dom0 so\nsome details might not match your system and others might just be wrong.\nIf you have any corrections or additions, please email me here:\nrupert.hair@ntlworld.com")]),e._v(" "),t("h2",{attrs:{id:"getting-the-installation-media"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getting-the-installation-media"}},[e._v("#")]),e._v(" Getting the Installation Media")]),e._v(" "),t("p",[e._v("The installer is available as DVD image from Sun's Download Centre\n"),t("a",{attrs:{href:"http://www.sun.com/download/products.xml?id=4691b249",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(". It is\ndistributed as an ISO file, which has been split into six parts and\nwhere each part has been zipped.")]),e._v(" "),t("p",[e._v("I downloaded each file, verified them using the supplied md5sums, and\nthen ran the following from bash to unzip and recombine them:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("mkdir /usr/lib/xen-solaris/\nfor foo in `ls 66-0624-nd-iso-[a-f].zip`; do\n    unzip -p $foo;\ndone >/usr/lib/xen-solaris/66-0624-nd.iso\n")])])]),t("h2",{attrs:{id:"extracting-the-kernel-and-initial-ramdisk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#extracting-the-kernel-and-initial-ramdisk"}},[e._v("#")]),e._v(" Extracting the Kernel and Initial ramdisk")]),e._v(" "),t("p",[e._v("To boot OpenSolaris under "),t("a",{attrs:{href:"Xen",title:"wikilink"}},[e._v("Xen")]),e._v(" you need both a kernel\nand initial ramdisk available on your dom0. The\n"),t("a",{attrs:{href:"http://opensolaris.org/os/community/xen/docs/install-solaris-domu-iso.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("documentation"),t("OutboundLink")],1),e._v("\nseems to assume that you are running an OpenSolaris dom0 and so will\nalready have a copy of the kernel and ramdisk available. In our case,\nwith a Linux dom0, we will need to extract the kernel and ramdisk from\nthe ISO image like so:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("mkdir /mnt/tmp\nmount -o loop,ro 66-0624-nd.iso /mnt/tmp\ncp /mnt/tmp/boot/x86.miniroot /usr/lib/xen-solaris/x86.miniroot-66-0624-nd\ncp /mnt/tmp/boot/platform/i86xpv/kernel/unix /usr/lib/xen-solaris/unix-66-0624-nd\numount /mnt/tmp\n")])])]),t("h2",{attrs:{id:"configuring-xen-for-the-installation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuring-xen-for-the-installation"}},[e._v("#")]),e._v(" Configuring Xen for the Installation")]),e._v(" "),t("p",[e._v("Before you can boot OpenSolaris to begin the installation you will need\nto create a "),t("a",{attrs:{href:"Xen",title:"wikilink"}},[e._v("Xen")]),e._v(" configuration file defining the\nvirtual disk, virtual DVD drive, kernel, ramdisk, memory size and kernel\nparameters. Here's an example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("name = 'argolin'\nmemory = '1024'\ndisk = [ 'file:/mnt/tmp/66-0624-nd.iso,6:cdrom,r', 'phy:/dev/xenvg/argolin.disk,0,w' ]\nvif = [ '' ]\non_shutdown = 'destroy'\non_reboot = 'destroy'\non_crash = 'destroy'\nkernel = '/usr/lib/xen-solaris/unix-66-0624-nd'\nramdisk = '/usr/lib/xen-solaris/x86.miniroot-66-0624-nd'\nextra = '/platform/i86xpv/kernel/unix - nowin -B install_media=cdrom'\n")])])]),t("p",[e._v("This creates a domU called argolin with 1024MB of RAM, a virtual DVD\ndrive from the image in '/mnt/tmp/66-0624-nd.iso', a virtual disk from\nthe device '/dev/xenvg/argolin.disk', the default virtual network\ninterface and the kernel and ramdisk extracted earlier. This\nconfiguration file should be saved in '/etc/xen/' and given a name like\n'argolin.conf' but this is up to you.")]),e._v(" "),t("h2",{attrs:{id:"smp-related-io-hang-part-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#smp-related-io-hang-part-1"}},[e._v("#")]),e._v(" SMP-related IO Hang (part 1)")]),e._v(" "),t("p",[e._v("My first tries at booting OpenSolaris as a domU resulted in the\ninstaller hanging at some point during the main package installation\nprocess. After much help from the kind folk of #solaris-xen on\nirc.oftc.net we found that this was an IO hang which is only seen on SMP\nsystems. A work-around for this bug exists in the kernel but has to be\nenabled manually using the kernel's built in debugger. The '-kd' kernel\nparameter, shown below, causes the kernel to open the debugger as soon\nas possible after boot.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("extra = '/platform/i86xpv/kernel/unix -kd - nowin -B install_media=cdrom'\n")])])]),t("h2",{attrs:{id:"booting-the-installer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#booting-the-installer"}},[e._v("#")]),e._v(" Booting the Installer")]),e._v(" "),t("p",[e._v("Once you have the DVD image, have extracted the kernel and ramdisk, and\nhave created the "),t("a",{attrs:{href:"Xen",title:"wikilink"}},[e._v("Xen")]),e._v(" configuration file you can boot\nthe installer like so:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("xm create -c argolin.conf\n")])])]),t("p",[e._v("The last argument to the command is the name of the configuration file\ncreated above.")]),e._v(" "),t("p",[e._v("You should then see:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('Using config file "/etc/xen/argolin.conf".\nStarted domain argolin\nSunOS Release 5.11 Version xen-nv66-2007-06-24 32-bit\nCopyright 1983-2007 Sun Microsystems, Inc.  All rights reserved.\nUse is subject to license terms.\nWARNING: Found xen v3.0.3-1 but need xen v3.0.4-1-sun\nWARNING: The kernel may not function correctly\nConfiguring /dev\nSolaris Interactive Text (Console session)\nUsing install cd in /dev/dsk/c0d6p0\n...\n...\n')])])]),t("p",[e._v("The warnings about the Xen version mismatch may be ignored as these\napparently only apply to 64bit systems (thanks again #solaris-xen).")]),e._v(" "),t("h2",{attrs:{id:"smp-related-io-hang-part-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#smp-related-io-hang-part-2"}},[e._v("#")]),e._v(" SMP-related IO Hang (part 2)")]),e._v(" "),t("p",[e._v("Following a boot with the '-kd' parameter you should see the following:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('Using config file "/etc/xen/argolin.conf".\nStarted domain argolin\nLoading kmdb...\n\nWelcome to kmdb\nLoaded modules: [ unix krtld genunix ]\n[0]>\n')])])]),t("p",[e._v("You type:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("workaround_6557577?W 1\n")])])]),t("p",[e._v("It shows:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("workaround_6557577:             0               =       0x1\n[0]>\n")])])]),t("p",[e._v("You type:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v(":c\n")])])]),t("p",[e._v("It shows:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("SunOS Release 5.11 Version xen-nv66-2007-06-24 32-bit\nCopyright 1983-2007 Sun Microsystems, Inc.  All rights reserved.\nUse is subject to license terms.\nWARNING: Found xen v3.0.3-1 but need xen v3.0.4-1-sun\nWARNING: The kernel may not function correctly\nConfiguring /dev\n...\n...\n")])])]),t("h2",{attrs:{id:"the-installation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-installation"}},[e._v("#")]),e._v(" The Installation")]),e._v(" "),t("p",[e._v("Once OpenSolaris has booted the installer will ask you for details of\nyour location and terminal. Make sure you are using a standard 80x25\nterminal and select option 6 (PC console). You should then see a shiny,\ncoloured installer. Make sure you say no to the automatic reboot as we\nneed to transfer the kernel and ramdisk to the dom0 after the install.")]),e._v(" "),t("h2",{attrs:{id:"smp-related-io-hang-part-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#smp-related-io-hang-part-3"}},[e._v("#")]),e._v(" SMP-related IO Hang (part 3)")]),e._v(" "),t("p",[e._v("You'll be glad to hear that this is the last section dealing with the\nSMP-related IO hang. To avoid having to use kmdb to enable the\nworkaround during each boot, I added the following line to\n'/etc/system':")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("set workaround_6557577 = 1\n")])])]),t("h2",{attrs:{id:"tcp-udp-checksum-problem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-udp-checksum-problem"}},[e._v("#")]),e._v(" TCP/UDP Checksum Problem")]),e._v(" "),t("p",[e._v("I also had a problem with the OpenSolaris kernel not generating\nchecksums for TCP and UDP packets. The fix for this is another addition\nto '/etc/system':")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("set xnf:xnf_cksum_offload = 0\n")])])]),t("h2",{attrs:{id:"finishing-up-and-rebooting-into-the-installed-system"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#finishing-up-and-rebooting-into-the-installed-system"}},[e._v("#")]),e._v(" Finishing up and Rebooting into the Installed System")]),e._v(" "),t("p",[e._v("Unfortunately we need to update the ramdisk after editing '/etc/system'\nso:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("bootadm update-archive -R /a\n")])])]),t("p",[e._v("As mentioned above, we need to make the OpenSolaris kernel and ramdisk\navailable inside the dom0. It is not strictly necessary to transfer the\nkernel from the domU to the dom0 as it is identical to the installer's\nkernel but I have shown the scp for both kernel and ramdisk because this\nmay be necessary if the kernel is upgraded at a later point. I chose a\nfull install so that I could use scp to do this but if you have an ftp\nserver handy you should be OK with a more minimal install. At the\npost-install console I did the following:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("/a/usr/bin/scp -S /a/usr/bin/ssh /a/platform/i86xpv/kernel/unix /a/platform/i86pc/boot_archive \\\n        10.0.0.1:/usr/lib/xen-solaris/\n")])])]),t("p",[e._v("I didn't really know how to shut down the system so I did:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("umount /a\nshutdown -y -g0 -i0\n")])])]),t("p",[e._v("Once back at your dom0's prompt you need to edit the domU's\nconfiguration file to look something like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("name = 'argolin'\nmemory = '1024'\ndisk = [ 'phy:/dev/xenvg/argolin.disk,0,w' ]\nvif = [ '' ]\non_shutdown = 'destroy'\non_reboot = 'destroy'\non_crash = 'destroy'\nkernel = '/usr/lib/xen-solaris/unix'\nramdisk = '/usr/lib/xen-solaris/boot_archive'\nextra = '/platform/i86xpv/kernel/unix'\nroot = '/dev/dsk/c0d0s0'\n")])])]),t("p",[e._v("Then fire up the domU again and you're away:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('xm create -c argolin.conf\n\nUsing config file "/etc/xen/argolin.conf".\nStarted domain argolin\nSunOS Release 5.11 Version xen-nv66-2007-06-24 32-bit\nCopyright 1983-2007 Sun Microsystems, Inc.  All rights reserved.\nUse is subject to license terms.\nWARNING: Found xen v3.0.3-1 but need xen v3.0.4-1-sun\nWARNING: The kernel may not function correctly\nip: joining multicasts failed (4) on xnf0 - will use link layer broadcasts for multicast\nHostname: argolin.xen.tardis.ed.ac.uk\n...\n...\nargolin.xen.tardis.ed.ac.uk console login:\n')])])]),t("p",[e._v("One final note: I was unable to login to the system as root via ssh by\ndefault. I only mention this because most Linux distributions now allow\nssh root login by default.")]),e._v(" "),t("p",[t("a",{attrs:{href:"category:Admin_Documents",title:"wikilink"}},[e._v("category:Admin Documents")])]),e._v(" "),t("p",[t("a",{attrs:{href:"Category:OutOfDate",title:"wikilink"}},[e._v("Category:OutOfDate")])])])}),[],!1,null,null,null);n.default=s.exports}}]);