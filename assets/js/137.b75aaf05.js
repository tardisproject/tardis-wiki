(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{508:function(e,t,o){"use strict";o.r(t);var n=o(46),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Tutorial 9: Setting up RSA keys and using SCP As well as interactive\npassword authentication, ssh supports public & private RSA key pairs.\nWhat this means is that you don't have to type your password in every\ntime you want to log into a remote machine over ssh - all you have to do\nis set up a key pair. The point of this particular tutorial however is\nthat there is more to ssh than just a shell login - ssh can be used to\ntransfer files ("),o("strong",[e._v("scp")]),e._v(") and set up tcp portforwards between two hosts,\nwhich can then be used to set up tunnels... overall ssh is a very\npowerful tool.")]),e._v(" "),o("p",[e._v("You can set up rsa keys between any pair of machines. You generate a\npair of keys on a machine - a private key and a public key - and copy\nthe public key over to the remote machine(s). You can then log into the\nremote machine(s) using the key authentication automatically - all this\nis done by default, the only difference from the user's perspective is\nthat no password prompt appears. There are simple ways to set up rsa\nkeypairs using tools in the putty suite, but i've never used them and am\nnot going to explain how to use them. If you are interested, check the\ndocs yourself on the putty website. To set this up on a linux machine to\nbe able to log into tardis without typing a password, or to generate a\nkeypair on tardis to log into another machine, do: '''")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("ssh-keygen -t rsa\n")])])]),o("p",[o("strong",[e._v("Simply press return to all the prompts to accept the defaults, you\nwant no passphrase. Then you will need to copy the contents of the newly\ncreated")]),e._v("~/.ssh/id_rsa.pub"),o("strong",[e._v("into ~/.ssh/authorized_keys if it doesn't\nexist or append the contents to the end if it does. You can either copy\nand paste the contents across manually using a text editor on each\nmachine, or you can do it using")]),e._v("scp"),o("strong",[e._v("and learn something on the way ðŸ˜ƒ\nSo let's do that:")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("scp ~/.ssh/id_rsa.pub [username]@ssh.tardis.ed.ac.uk:~/tempkey\n")])])]),o("p",[o("strong",[e._v("Feed it your password... then you'll need to log into the remote\nmachine. If you were doing this from tardis to another machine,\nobviously you would put the other machine instead of ssh.tardis...\nanyway, logged into the remote machine, do:")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("cat ~/tempkey >> ~/.ssh/authorized_keys\nrm -f ~/tempkey\n")])])]),o("p",[e._v("**That's all you have to do - no more password prompts. And now you know\nhow to use scp - if you're not sure you understand the syntax used\nabove,**man scp'''. The advantage of these two things is in the\ncombination - you will find you can write cron scripts on your home\nlinux box to scp certain files into your webdir at certain intervals for\ninstance, and countless similar uses.")]),e._v(" "),o("p",[e._v("Now assuming you have your website built already on your home box,\nwhether it's windows or linux or whatever, you can easily scp the\ncontents to your webdir without having to set up any frippery with\nfileservers of any kind, either using linux scp or putty's pscp - for\nexample, "),o("strong",[e._v("scp ~/myhtml/*\njimbob@ssh.tardis.ed.ac.uk:/var/autofs/www/users/jimbob/pages/")]),e._v(" -\nwithout even having to log into tardis (although bear in mind you may\nhave to modify the permissions of the files you copy to be readable to\nthe html daemon). To find out how to do this, read "),o("strong",[e._v("man chmod")]),e._v(", but in\nshort, for files you want to "),o("strong",[e._v("chmod 644 [filename]")]),e._v(" and for\ndirectories "),o("strong",[e._v("chmod 755 [filename]")]),e._v(" (the difference being that\ndirectories have to be marked executable for the user to be able to\nbrowse to them). Also for certain script files, such as php files, you\nwill want to make the permissions executable (755). Read the man page to\nfind out what these numbers mean and how to use them.")]),e._v(" "),o("p",[e._v("It is also worth mentioning "),o("strong",[e._v("winscp")]),e._v(" which seems a very popular\nwindows scp client, which can also do sftp. You can get "),o("strong",[e._v("winscp")]),e._v(" from\n"),o("a",{attrs:{href:"http://winscp.sourceforge.net/eng/download.php",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://winscp.sourceforge.net/eng/download.php"),o("OutboundLink")],1),e._v(". It is incredibly easy\nto use - fill in the hostname as "),o("strong",[e._v("ssh.tardis.ed.ac.uk")]),e._v(", your username\nand password as themselves (duh), and select "),o("strong",[e._v("scp")]),e._v(" at the bottom\ninstead of sftp. You'll get a nice graphical interface reminiscent of\nmost windows ftp clients - the left shows your local machine, the right\nshows your tardis homedir, and you can simply drag and drop from one\nside to the other. For advanced usage have a look at its help system.\nVery very easy ðŸ˜ƒ")]),e._v(" "),o("p",[e._v("Next - how to download stuff and browse the internet from the shell.")]),e._v(" "),o("p",[o("strong",[e._v("Next: "),o("a",{attrs:{href:"Tardis_Beginner_Tutorials/10",title:"wikilink"}},[e._v("Web browsing using links and\nwget")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);